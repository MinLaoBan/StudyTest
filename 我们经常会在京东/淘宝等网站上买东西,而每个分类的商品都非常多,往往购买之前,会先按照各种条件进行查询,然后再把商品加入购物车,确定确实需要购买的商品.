package comitheima.ThirteenDay_Test.List_Stream02;

import java.util.ArrayList;
import java.util.List;
import java.util.function.Predicate;
import java.util.stream.Stream;

/**
 * 我们经常会在京东/淘宝等网站上买东西,而每个分类的商品都非常多,往往购买之前,会先按照各种条件进行查询,然后再把商品加入购物车,确定确实需要购买的商品.
 *
 * 本案例使用List集合对象存储商城中的商品,Product对象代表商品,商品信息有商品编号pid,商品名称pname,商品价格price,是否下架pflag(1:下架	0:未下架),商品分类cid(商品所属分类的id:c001 代表家电,c002 代表服饰 c003 代表化妆品 )
 *
 * 使用lambda表达式和Stream流的相关知识,依次进行以下若干操作步骤:
 * 	1.查询"化妆品"分类商品详情,并遍历输出
 *     2.查询"化妆品"分类上架商品详情,并遍历输出
 *     3.查询"化妆品"或者"家电"两个分类上架商品详情
 *     注意: 以上3个操作都是独立的
 * 初始化数据如下:
 *     List<Product> list = new ArrayList<>();
 *     list.add(new Product("p001","联想",5000,0,"c001"));
 *     list.add(new Product("p002","海尔",3000,1,"c001"));
 *     list.add(new Product("p003","雷神",5000,1,"c001"));
 *     list.add(new Product("p004","JACK JONES",800,1,"c002"));
 *     list.add(new Product("p005","真维斯",200,0,"c002"));
 *     list.add(new Product("p006","花花公子",440,0,"c002"));
 *     list.add(new Product("p007","劲霸",2000,1,"c002"));
 *     list.add(new Product("p008","香奈儿",800,1,"c003"));
 *     list.add(new Product("p009","相宜本草",200,0,"c003"));
 */
public class Test {
    public static void main(String[] args) {
        List<Product> list = new ArrayList<>();
        list.add(new Product("p001","联想",5000,0,"c001"));
        list.add(new Product("p002","海尔",3000,1,"c001"));
        list.add(new Product("p003","雷神",5000,1,"c001"));
        list.add(new Product("p004","JACK JONES",800,1,"c002"));
        list.add(new Product("p005","真维斯",200,0,"c002"));
        list.add(new Product("p006","花花公子",440,0,"c002"));
        list.add(new Product("p007","劲霸",2000,1,"c002"));
        list.add(new Product("p008","香奈儿",800,1,"c003"));
        list.add(new Product("p009","相宜本草",200,0,"c003"));
        System.out.println();

        //1.查询“化妆品”分类商品详情
        List<Product> newlist = filterProduct(list,(Product p)->{
            return p.getCid().equals("c003");
        });
        System.out.println("----化妆品分类商品详情如下----");
        //调用方法,调用集合信息
        printProductList(newlist);

        //2.查询“化妆品”分类上架商品详情
        newlist =   filterProduct(list,(Product p)->{
            return p.getCid().equals("c003") && p.getPflag() == 1;
        });
        System.out.println("----化妆品分类上架商品详情如下----");
        //调用方法,调用集合信息
        printProductList(newlist);

        //3.查询“化妆品”或者“家电”两个分类上架商品详情
        newlist = filterProduct(list,(Product p)->{
            return p.getCid().equals("c003") || p.getCid().equals("c001") && p.getPflag() == 1;
        });
        System.out.println("----查询“化妆品”或者“家电”两个分类上架商品详情如下----");
        //调用方法,调用集合信息
        printProductList(newlist);





    }

    //定义方法,按照指定条件查询商品信息,返回List集合对象,存储Product集合对象
    public static List<Product> filterProduct(List<Product> list, Predicate<Product> p){
        List<Product> newList = new ArrayList<>();
        for (Product product:list) {
            if (p.test(product)){
                newList.add(product);
            }
        }
        return newList;
    }
    //定义方法,打印List集合对象内容
    public static void printProductList(List<Product> product){
        Stream<Product> p = product.stream();
        p.forEach((Product s)->{
            System.out.println(s);
        });
    }
}



package comitheima.ThirteenDay_Test.List_Stream02;

public class Product {
    private String pid;         // id
    private String pname;       // 名字
    private Integer price;      // 商品价格
    private Integer pflag;	    // 是否下架    1:下架	0:未下架
    private String cid;         // 分类ID

    public Product() {
    }

    public Product(String pid, String pname, Integer price, Integer pflag, String cid) {
        this.pid = pid;
        this.pname = pname;
        this.price = price;
        this.pflag = pflag;
        this.cid = cid;
    }

    public String getPid() {
        return pid;
    }

    public void setPid(String pid) {
        this.pid = pid;
    }

    public String getPname() {
        return pname;
    }

    public void setPname(String pname) {
        this.pname = pname;
    }

    public Integer getPrice() {
        return price;
    }

    public void setPrice(Integer price) {
        this.price = price;
    }

    public Integer getPflag() {
        return pflag;
    }

    public void setPflag(Integer pflag) {
        this.pflag = pflag;
    }

    public String getCid() {
        return cid;
    }

    public void setCid(String cid) {
        this.cid = cid;
    }

    @Override
    public String toString() {
        return "Product{" +
                "pid='" + pid + '\'' +
                ", pname='" + pname + '\'' +
                ", price=" + price +
                ", pflag=" + pflag +
                ", cid='" + cid + '\'' +
                '}';
    }
}

