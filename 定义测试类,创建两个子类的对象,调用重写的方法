/**
 * 请使用代码描述:
 *     我们平时的家用电器,都需要通电,然后开启,或者关闭,而且每个家用电器都有自己特殊的功能,比如:
 * 电视,除了通电之后的开启和关闭,还有播放电视剧的功能
 * 空调,除了通电之后的开启和关闭,还有制冷的功能
 *
 * 1.定义一个父类common(家用电器),定义两个抽象方法-->开启(open())和关闭(close())
 * 2.定义一个接口Sockets(插座),定义一个抽象方法-->通电(tongDian())
 * 3.定义一个子类(实现类)TV(电视),继承家用电器类的同时实现插座接口,重写抽象方法
 * 4.定义一个子类(实现类)AirConditioning(空调),继承家用电器类的同时实现插座接口,重写抽象方法
 * 5.定义测试类,创建两个子类的对象,调用重写的方法
 */
 
 
 //定义一个父类common(家用电器),定义两个抽象方法-->开启(open())和关闭(close())
 package comitheima.ThreeDay_Test.ElectricalAppliances;

public interface common {
    public void open();
    public void close();
}

//定义一个接口Sockets(插座),定义一个抽象方法-->通电(tongDian())
package comitheima.ThreeDay_Test.ElectricalAppliances;

public abstract class Sockets {
    public abstract void tongdian();
}

//定义一个子类(实现类)TV(电视),继承家用电器类的同时实现插座接口,重写抽象方法
package comitheima.ThreeDay_Test.ElectricalAppliances;

public class Tv extends Sockets implements common{
    private String name;

    public Tv() {
    }

    public Tv(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Override
    public void open() {
        System.out.println(name + "电视启动了");
    }

    @Override
    public void close() {
        System.out.println(name + "电视关闭了");
    }

    public void playTv(){
        System.out.println(name + "电视开始播放");
    }

    @Override
    public void tongdian() {
        System.out.println(name + "开始通电");
    }
}

定义一个子类(实现类)AirConditioning(空调),继承家用电器类的同时实现插座接口,重写抽象方法
package comitheima.ThreeDay_Test.ElectricalAppliances;

public class AirConditioning extends Sockets implements common{
    private String name;

    public airConditioning() {
    }

    public airConditioning(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Override
    public void open() {
        System.out.println(name + "空调启动了");
    }

    @Override
    public void close() {
        System.out.println(name + "空调关闭了");
    }

    public void refrigeration(){
        System.out.println(name + "开启制冷模式");
    }

    @Override
    public void tongdian() {
        System.out.println(name + "开始通电");
    }
}


//定义测试类,创建两个子类的对象,调用重写的方法
public class AllTest {
    public static void main(String[] args) {
        Tv tv = new Tv("戴尔");
        tv.tongdian();
        tv.open();
        tv.close();
        tv.playTv();

        airConditioning airConditioning = new airConditioning("美玲");
        airConditioning.tongdian();
        airConditioning.open();
        airConditioning.refrigeration();
        airConditioning.close();
    }
}


