package comitheima.TenDay_Test.Thread_lottery;

import java.awt.*;
import java.util.ArrayList;
import java.util.Random;

public class CJTask implements Runnable{
    //1.1、 定义ArrayList类型成员变量prizeList，代表抽奖池
    private ArrayList<String> prizeList;
    //1.2、 定义构造方法，初始化抽奖池
    public CJTask() {
    }

    public CJTask(ArrayList<String> prizeList) {
        this.prizeList = prizeList;
    }
    //1.3、 覆盖重写run方法（使用同步方法或同步代码块保证数据安全），按照打印要求实现功能（死循环内部嵌套 同步）
    @Override
    public void run() {
        while (true){
            synchronized (this){
                //1.3.1、 没有奖品，结束循环
                if (prizeList.size() <= 0){
                    break;
                }
                //1.3.2、有奖品，从抽奖池中随机抽取一个（注意：抽一个奖品，抽奖池中就少一个）
                String prize = prizeList.remove(new Random().nextInt(prizeList.size()));
                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                //1.3.3、打印输出
                System.out.println(Thread.currentThread().getName() + "抽出了" + prize);
            }
        }
    }
}


package comitheima.TenDay_Test.Thread_lottery;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Test {
    public static void main(String[] args) {
        //2.1、创建ArrayList集合对象prizeLis代表抽奖池
        ArrayList<String> prizeList = new ArrayList<>();
        //2.2、向List集合对象prizeLis中添加所有的奖项
        Collections.addAll(prizeList,"苹果手机","华为手机","三洋踏板摩托","迪拜7日游","苹果笔记本",
                "联想笔记本","小米空气净化器","格力空调","海尔冰箱","海信电视");
        //2.2、创建线程任务CJTask类的对象，传递抽奖池List集合对象prizeList
        CJTask cjx = new CJTask(prizeList);
        //2.3、创建2个Thread类的对象，传递线程任务CJTask类的对象并指定线程名称
        Thread t1 = new Thread(cjx,"第一组");
        Thread t2 = new Thread(cjx,"第二组");
        //2.4、2个Thread类的对象分别调用start方法，开启线程
        t1.start();
        t2.start();

    }
}

