package comitheima.TwelveDay_Test.Thread_Lock;

import java.util.List;
import java.util.Random;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

/**
 * 某房产公司大促销,所有购房者可以参加一次抽奖,抽奖箱中总共有10个奖品,
 * 分别是:"苹果 手机","华为手机","三洋踏板摩托","迪拜7日游","苹果笔记本",
 * "联想笔记本","小米空气净化器","格力空调","海尔冰箱","海信电视"
 * 所有抽奖者分成两组进行抽奖,请创建两个线程,名称分别为“第一组”和“第二组”，随机从抽奖箱中完成抽奖
 * 程序运行效果如下图：要求轮抽取，平均分配抽奖次数,每组5次
 * 使用Lock锁实现
 *
 * 能够使用Lock锁解决多线程轮流抽奖问题。
 *
 *
 */

//1、定义线程任务类CJTask,实现Runnable接口
public class cjTest implements Runnable {
    //1.1、 定义List类型成员变量prizeList，代表抽奖池
    private List<String> prizeList;
    //1.5、 定义构造方法，初始化抽奖池
    public cjTest(List<String> prizeList) {
        this.prizeList = prizeList;
    }

    //获得lock锁的实现类对象
    Lock lock = new ReentrantLock();
    //1.3、定义监视器对象
    private Condition conA = lock.newCondition();
    private Condition conB = lock.newCondition();
    //1.4、定义标记
    private boolean flag = true;
    int num = 1;

    //1.6、 覆盖重写run方法（使用Lock锁实现同步,并轮流抽奖）
    @Override
    public  void run() {
        while (true) {
            try {

                lock.lock();
                //没有奖品，结束循环
                if (prizeList.size() <= 0){
                    break;
                }
                //有奖品，从抽奖池中随机抽取一个（抽一个少一个）
                    String prize = prizeList.remove(new Random().nextInt(prizeList.size()));
                    //打印输出
                    System.out.println(Thread.currentThread().getName() + "抽到了" + prize + "抽了第" + num + "次");
                    num++;
                if(flag) {
                    //修改标记
                    flag = false;
                    //唤醒对方线程
                    conB.signal();
                    //当前线程等待
                    conA.await();
                } else {
                    //修改标记
                    flag = true;
                    //唤醒对方线程
                    conA.signal();
                    //当前线程等待
                    conB.await();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }finally {
                lock.unlock();
            }
        }

    }
}


package comitheima.TwelveDay_Test.Thread_Lock;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

//2、定义测试类Test02
public class cjTest02 {
    public static void main(String[] args) {
        //2.1、创建List集合对象prizeLis代表抽奖池
        List<String> prizeList = new ArrayList<>();
        //2.2、向List集合对象prizeLis中添加所有的奖项
        Collections.addAll(prizeList,"华为手机","三洋踏板摩托车","迪拜7日游","苹果笔记本","联想笔记本","小米空气净化器","格力空调","海尔冰箱",
                "海信电视","格力空调");

        //2.2、创建线程任务CJTask类的对象，传递抽奖池List集合对象prizeList
        cjTest cjTest = new cjTest(prizeList);
        //2.3、创建2个Thread类的对象，传递线程任务CJTask类的对象并指定线程名称
        Thread t1 = new Thread(cjTest,"第一组");
        Thread t2 = new Thread(cjTest,"第二组");

        //2.4、2个Thread类的对象分别调用start方法，开启线程
        t1.start();
        t2.start();
    }
}

