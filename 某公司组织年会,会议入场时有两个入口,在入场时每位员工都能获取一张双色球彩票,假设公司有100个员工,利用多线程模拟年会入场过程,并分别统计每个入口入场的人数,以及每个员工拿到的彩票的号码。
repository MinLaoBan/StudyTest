package comitheima.TwelveDay_Test.DoubleColorBall;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Random;

public class DoubleColorBallUtils {
    //构造方法私有
    private DoubleColorBallUtils() {
    }
    //定义静态方法create，产生一个双色球，返回string
    public static String create(){
        Random r = new Random();
        //创建list集合存放红球
        List<String> list = new ArrayList<>();
        while (list.size() < 6){
            //产生1-33的数字
            int num = r.nextInt(33)+1;
            String strnum = num < 10 ? 0+""+num : num + "";
            //保证红球不重复
            if (!list.contains(strnum)){
                list.add(strnum);
            }
        }
        //对红球从小到大排序
        Collections.sort(list);
        //产生一个蓝球
        int num = r.nextInt(16)+1;
        String str = num < 10 ? 0+""+num : num+"";
        //将蓝球存放到list集合中
        list.add(str);
        return list.toString();
    }
}

package comitheima.TwelveDay_Test.DoubleColorBall;

import java.util.List;
import java.util.Random;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

public class EntranceTask implements Runnable{
    private int num;//代表出场人数
    private List<String> doubleColorBalls;//存放num张彩票
    //定义Lock锁对象
    Lock lock = new ReentrantLock();
    //定义监视器对象
    private Condition con = lock.newCondition();

    public EntranceTask(int num, List<String> doubleColorBalls) {
        this.num = num;
        this.doubleColorBalls = doubleColorBalls;
    }

    @Override
    public void run() {
        //记录每个入口的入场人数
        int count = 0;
        while (true) {
            try {
                //上锁
                lock.lock();
                //所有人员已入场，循环结束
                if (num <= 0){
                    con.signal();
                    break;
                }
                //唤醒监视器对象con监视的阻塞队列中的处于等待状态的一个线程
                con.signal();
                //有人员入场，随机抽取一个双色球（注意：抽一个双色球，就少一个）
                //				//产生一个随机索引
                int index = new Random().nextInt(doubleColorBalls.size());
                //获取一张双色球
                String doubleColorBallNumber = doubleColorBalls.remove(index);
                System.out.println("编号为" + (num--) + "的员工从" + Thread.currentThread().getName() + "入场，拿到的双色球是：" + doubleColorBallNumber);
                //计数器加1
                count++;
                //当前线程进入到监视器对象con监视的阻塞队列中
                con.await();
            } catch (Exception e) {
                e.printStackTrace();
            }finally {
                //2.6.9、释放锁
                lock.unlock();
            }
        }
        //循环结束，打印每个入口进入的人数
        System.out.println("从" + Thread.currentThread().getName() + "入场的员工，总共有" + count + "人");
    }
}



package comitheima.TwelveDay_Test.DoubleColorBall;

import java.util.ArrayList;
import java.util.List;

/**
 * 某公司组织年会,会议入场时有两个入口,在入场时每位员工都能获取一张双色球彩票,假设公司有100个员工,利用多线程模拟年会入场过程,并分别统计每个入口入场的人数,以及每个员工拿到的彩票的号码。
 * 双色球球规则:
 * 双色球: 由6个红色球号码和1个蓝色球号码组成。
 * 红色球: 从1--33中选择。
 * 蓝色球: 从1--16中选择。
 * 红球从小到大的顺序,不可重复,蓝球和红球可以重复
 * 线程运行后打印格式如下：要求两个入口轮流进入，要求平均分配进入人数
 *
 *
 * 使用List集合存储彩票，定义线程任务类从List集合中获取彩票，开启2个线程执行线程任务,使用Lock锁实现两个线程交替轮流执行。
 *
 *
 */
public class Test {
    public static void main(String[] args) {
        //创建List集合对象doubleColorBalls代表所有的双色球
        List<String> doubleColorBalls = new ArrayList<>();
        //往doubleColorBalls中添加双色球
        for (int i = 0; i < 100; i++) {
            doubleColorBalls.add(DoubleColorBallUtils.create());
        }
        //创建线程任务EntranceTask类的对象，传递存储双色球的List集合对象doubleColorBalls,并指定入场人数
        EntranceTask entranceTask = new EntranceTask(100,doubleColorBalls);

        Thread t1 = new Thread(entranceTask,"前门");
        Thread t2 = new Thread(entranceTask,"后门");

        t1.start();
        t2.start();
    }
}

