package comitheima.FourteenDay_Test.TCP_03;

import java.io.*;
import java.net.Socket;
import java.util.Scanner;

public class    Test_Client01 {
    public static void main(String[] args) throws Exception {
        //1.创建客户端socket对象,指定服务端ip地址和端口号
        Socket client = new Socket("localhost",6666);
        //2.获取客户端字节输出流对象
        OutputStream netOs = client.getOutputStream();
        //3.把客户端字节输出流包装成字符缓冲输出流
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(netOs));
        //4.获取客户端字节输入流
        InputStream netIs = client.getInputStream();
        //5.把客户端输入流包装成字符缓冲输入流
        BufferedReader br = new BufferedReader(new InputStreamReader(netIs));
        //6.创建Scanner对象
        Scanner sc = new Scanner(System.in);
        //7.客户端循环读（读取服务端发送来的数据）写（写数据到服务端）
        String line = "";
        String line2 = "";
        while ((line= sc.nextLine())!=null){
            //循环发送键盘输入的信息
            bw.write(line);
            bw.newLine();
            bw.flush();
            //打印服务端发送来的信息
            line2=br.readLine();
            System.out.println("客户端收到服务端的信息：" + line2);
            //判断客户端发送的信息中包含‘再见’，‘拜拜’，结束客户端
            if (line.contains("拜拜")||line.contains("再见")){
                client.close();
                break;
            }
        }
        //8.关闭流，释放资源
        bw.close();
        br.close();
    }
}

package comitheima.FourteenDay_Test.TCP_03;

import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Scanner;

public class Test_Server01 {
    public static void main(String[] args) throws Exception {
        //1.创建服务端serversocket对象
        ServerSocket serverSocket = new ServerSocket(6666);
        //2.服务端server调用accept方法连接客户端
        Socket server = serverSocket.accept();
        //3.获取服务端字节输入流
        InputStream netIs = server.getInputStream();
        //4.把字节输入流包装成字符缓冲输入流
        BufferedReader br = new BufferedReader(new InputStreamReader(netIs));
        //5.获取服务端字节输出流
        OutputStream netOs = server.getOutputStream();
        //6.把字节输出流包装成字符缓冲输出流
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(netOs));
        //7.创建Scanner对象
        Scanner sc = new Scanner(System.in);
        String line = "";
        //8.循环读取客户端发送来的数据并写数据给客户端
        while ((line = br.readLine())!=null){
            System.out.println("服务端收到客户端发来的信息：" + line);
            //判断客户端发送来的数据包含‘再见’‘拜拜’字段，回送字段并结束服务端
            if (line.contains("再见")||line.contains("拜拜")){
                bw.write(line);
                bw.newLine();
                bw.flush();
                server.close();
                break;
            }
            //获取键盘录入的信息，发送给客户端
            line = sc.nextLine();
            bw.write(line);
            bw.newLine();
            bw.flush();
        }
        //9.结束流，释放资源
        bw.close();
        br.close();
        server.close();
    }
}

